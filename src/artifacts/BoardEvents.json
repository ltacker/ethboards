{
  "contractName": "BoardEvents",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "boardId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "loser",
          "type": "address"
        }
      ],
      "name": "gameFinished",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "boardId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "joiner",
          "type": "address"
        }
      ],
      "name": "joinGame",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"boardId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loser\",\"type\":\"address\"}],\"name\":\"gameFinished\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"boardId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"joiner\",\"type\":\"address\"}],\"name\":\"joinGame\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"gameFinished(uint256,uint256,address,address)\":{\"params\":{\"boardId\":\"id of the board\",\"gameId\":\"id of the game\",\"loser\":\"address of the loser\",\"winner\":\"address of the winner\"}},\"joinGame(uint256,uint256,address)\":{\"params\":{\"boardId\":\"id of the board\",\"gameId\":\"id of the game\",\"joiner\":\"address of the joining player\"},\"returns\":{\"_0\":\"true if the player the caller can join the specified game\"}}},\"title\":\"BoardEvents\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"gameFinished(uint256,uint256,address,address)\":{\"notice\":\"Callback function called when the game is finished. It could for example distribute deposits to the winner\"},\"joinGame(uint256,uint256,address)\":{\"notice\":\"Check if the player can join the game. It could be for example a function that verify the player has ade a deposit in the BoardEvents contract. This call shoud lock the fund until the game is finished\"}},\"notice\":\"The interface that must implement board events contract, actions that happen when a player win or lose a game and condition to join a game\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/lucas/Desktop/ethboards/contracts/BoardEvents.sol\":\"BoardEvents\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/lucas/Desktop/ethboards/contracts/BoardEvents.sol\":{\"keccak256\":\"0xf7da192a94a10ece25ffe0e12b52a2f8f04ade68b3da8a1eed582dbc84a0c093\",\"urls\":[\"bzz-raw://45e40c5db00ed193dbd8a528879b272e57691fefec2645eb5f0f3fd34aa0fb6b\",\"dweb:/ipfs/QmPJzCqavCZ8MBj3UJvqrCe5wU82ovTbszUbEB8MGw4pAb\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity 0.6.11;\n\n/**\n * @title BoardEvents\n * @notice The interface that must implement board events contract, actions that happen when a player win or lose a game and condition to join a game\n*/\ninterface BoardEvents {\n    /**\n     * @notice Callback function called when the game is finished. It could for example distribute deposits to the winner\n     * @param boardId id of the board\n     * @param gameId id of the game\n     * @param winner address of the winner\n     * @param loser address of the loser\n    */\n    function gameFinished(uint boardId, uint gameId, address winner, address loser) external;\n\n    /**\n     * @notice Check if the player can join the game. It could be for example a function that verify the player has ade a deposit in the BoardEvents contract. This call shoud lock the fund until the game is finished\n     * @param boardId id of the board\n     * @param gameId id of the game\n     * @param joiner address of the joining player\n     * @return true if the player the caller can join the specified game\n    */\n    function joinGame(uint boardId, uint gameId, address joiner) external returns(bool);\n}",
  "sourcePath": "/Users/lucas/Desktop/ethboards/contracts/BoardEvents.sol",
  "ast": {
    "absolutePath": "/Users/lucas/Desktop/ethboards/contracts/BoardEvents.sol",
    "exportedSymbols": {
      "BoardEvents": [
        173
      ]
    },
    "id": 174,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 147,
        "literals": [
          "solidity",
          "0.6",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 148,
          "nodeType": "StructuredDocumentation",
          "src": "25:178:3",
          "text": " @title BoardEvents\n @notice The interface that must implement board events contract, actions that happen when a player win or lose a game and condition to join a game"
        },
        "fullyImplemented": false,
        "id": 173,
        "linearizedBaseContracts": [
          173
        ],
        "name": "BoardEvents",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 149,
              "nodeType": "StructuredDocumentation",
              "src": "232:290:3",
              "text": " @notice Callback function called when the game is finished. It could for example distribute deposits to the winner\n @param boardId id of the board\n @param gameId id of the game\n @param winner address of the winner\n @param loser address of the loser"
            },
            "functionSelector": "1fe6d2ca",
            "id": 160,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "gameFinished",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "boardId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 160,
                  "src": "549:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 160,
                  "src": "563:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "563:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "winner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 160,
                  "src": "576:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "576:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "loser",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 160,
                  "src": "592:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "592:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "548:58:3"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "615:0:3"
            },
            "scope": 173,
            "src": "527:89:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 161,
              "nodeType": "StructuredDocumentation",
              "src": "622:424:3",
              "text": " @notice Check if the player can join the game. It could be for example a function that verify the player has ade a deposit in the BoardEvents contract. This call shoud lock the fund until the game is finished\n @param boardId id of the board\n @param gameId id of the game\n @param joiner address of the joining player\n @return true if the player the caller can join the specified game"
            },
            "functionSelector": "01d3a6da",
            "id": 172,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "joinGame",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "boardId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "1069:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "1083:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1083:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "joiner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "1096:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1096:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1068:43:3"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "1129:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1128:6:3"
            },
            "scope": 173,
            "src": "1051:84:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 174,
        "src": "204:933:3"
      }
    ],
    "src": "0:1137:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/lucas/Desktop/ethboards/contracts/BoardEvents.sol",
    "exportedSymbols": {
      "BoardEvents": [
        173
      ]
    },
    "id": 174,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 147,
        "literals": [
          "solidity",
          "0.6",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 148,
          "nodeType": "StructuredDocumentation",
          "src": "25:178:3",
          "text": " @title BoardEvents\n @notice The interface that must implement board events contract, actions that happen when a player win or lose a game and condition to join a game"
        },
        "fullyImplemented": false,
        "id": 173,
        "linearizedBaseContracts": [
          173
        ],
        "name": "BoardEvents",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 149,
              "nodeType": "StructuredDocumentation",
              "src": "232:290:3",
              "text": " @notice Callback function called when the game is finished. It could for example distribute deposits to the winner\n @param boardId id of the board\n @param gameId id of the game\n @param winner address of the winner\n @param loser address of the loser"
            },
            "functionSelector": "1fe6d2ca",
            "id": 160,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "gameFinished",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "boardId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 160,
                  "src": "549:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 160,
                  "src": "563:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "563:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "winner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 160,
                  "src": "576:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "576:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "loser",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 160,
                  "src": "592:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "592:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "548:58:3"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "615:0:3"
            },
            "scope": 173,
            "src": "527:89:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 161,
              "nodeType": "StructuredDocumentation",
              "src": "622:424:3",
              "text": " @notice Check if the player can join the game. It could be for example a function that verify the player has ade a deposit in the BoardEvents contract. This call shoud lock the fund until the game is finished\n @param boardId id of the board\n @param gameId id of the game\n @param joiner address of the joining player\n @return true if the player the caller can join the specified game"
            },
            "functionSelector": "01d3a6da",
            "id": 172,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "joinGame",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "boardId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "1069:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "1083:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1083:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "joiner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "1096:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1096:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1068:43:3"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "1129:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1128:6:3"
            },
            "scope": 173,
            "src": "1051:84:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 174,
        "src": "204:933:3"
      }
    ],
    "src": "0:1137:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.11+commit.5ef660b1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.2",
  "updatedAt": "2020-07-29T09:50:36.778Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "gameFinished(uint256,uint256,address,address)": {
        "params": {
          "boardId": "id of the board",
          "gameId": "id of the game",
          "loser": "address of the loser",
          "winner": "address of the winner"
        }
      },
      "joinGame(uint256,uint256,address)": {
        "params": {
          "boardId": "id of the board",
          "gameId": "id of the game",
          "joiner": "address of the joining player"
        },
        "returns": {
          "_0": "true if the player the caller can join the specified game"
        }
      }
    },
    "title": "BoardEvents",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "gameFinished(uint256,uint256,address,address)": {
        "notice": "Callback function called when the game is finished. It could for example distribute deposits to the winner"
      },
      "joinGame(uint256,uint256,address)": {
        "notice": "Check if the player can join the game. It could be for example a function that verify the player has ade a deposit in the BoardEvents contract. This call shoud lock the fund until the game is finished"
      }
    },
    "notice": "The interface that must implement board events contract, actions that happen when a player win or lose a game and condition to join a game",
    "version": 1
  }
}